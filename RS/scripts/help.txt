A tool to simulate the loop unrolling in the program. "Loop unrolling" is the number of times the loop body runs, e.g. for(int i=o; i<10; i++) {...}, this loop is unrolled 10 times. The output of the program is two files located in a directory named "outputRS":
                - out.txt - contains summary of statistics about the loop unrolling for each loop in the program.
                - out.xml - More detailed output per loop, in an XML format, it contains informarion about loop unrolling for each loop and the inputs which led to the output results.
The program gets a folder with C++ source file that contain loops, analyzes the code, and creates a random set inputs, runs the program with each randomly generated input, and gather statistics about loop unrolling for each loop.

 

Options:

      --input |-i       -   path to the input files directory, must be a path to a directory. Default input files directory is the working directory (pwd)
      --output |-o      -   path to the output files directory, must be a path to a directory. Default output directory is the input directory, if input directory was not specified the output directory will be the current folder.
      --save |-s        -   save the auto genareted files of the progrem run to the output directory.
      --maxBound |-m        -   define the max number of the unrolling times loop, after this number of iteretion the program exit from the loop and continue. Default value is 2048.
      --debug |-d       -   save some debug printouts to a file that exists in the directory RS/debug (used for program debugging purposes).
      --verbose |-v     -   gives the user more details about the program progress.
      --repetitions |-r -   the number of times to run the user code with autogenerated inputs. Default value is 20
      --extenions |-e   -   the input source files' extenions. if you run this program in directory that contains files with diffrent extenions from cpp and h you have to declear this without spaces. for example: -e h,hpp,c,cpp.
      --help|-h         -   show this explaining

Arguments:
      you don't have to write arguments


hope this simulate tool will help you
